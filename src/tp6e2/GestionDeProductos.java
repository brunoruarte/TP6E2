package tp6e2;

import java.awt.HeadlessException;
import java.util.TreeSet;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bruno
 */
public class GestionDeProductos extends javax.swing.JInternalFrame {
    //creo un modelo para perzonalizar la tabla
    private DefaultTableModel modelo = new DefaultTableModel();
    //creo el Treeset de productos
    public static TreeSet<Producto> listaProductos = new TreeSet<>();
    
    /**
     * Creates new form GestionDeProductos
     */
    public GestionDeProductos() {
        initComponents();
        JComboBox<Categoria> jComboBoxCategoria = new JComboBox<>();
        iniciarCombo();
        encabezados();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelGestionDeProductos = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelCargarProducto = new javax.swing.JLabel();
        jLabelCodigo = new javax.swing.JLabel();
        jLabelDescripcion = new javax.swing.JLabel();
        jLabelPrecio = new javax.swing.JLabel();
        jLabelStock = new javax.swing.JLabel();
        jLabelCategoria = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldDescripcion = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jSpinnerStock = new javax.swing.JSpinner();
        jButtonBuscar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneDescripcion = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();

        jLabelGestionDeProductos.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabelGestionDeProductos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGestionDeProductos.setText("Gestión de productos");

        jLabelCargarProducto.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabelCargarProducto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCargarProducto.setText("Cargar Producto");

        jLabelCodigo.setText("Código:");

        jLabelDescripcion.setText("Descripción:");

        jLabelPrecio.setText("Precio:");

        jLabelStock.setText("Stock:");

        jLabelCategoria.setText("Categoría:");

        jTextFieldCodigo.setEnabled(false);
        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });

        jTextFieldDescripcion.setEnabled(false);

        jTextFieldPrecio.setEnabled(false);

        jComboBoxCategoria.setEnabled(false);

        jSpinnerStock.setEnabled(false);

        jButtonBuscar.setIcon(new javax.swing.ImageIcon("G:\\Mi unidad\\ULP Programacion\\Laboratorio 1\\TP5\\TP6E2\\lupita25x25.png")); // NOI18N
        jButtonBuscar.setMaximumSize(new java.awt.Dimension(30, 30));
        jButtonBuscar.setMinimumSize(new java.awt.Dimension(30, 30));
        jButtonBuscar.setPreferredSize(new java.awt.Dimension(30, 30));
        jButtonBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonBuscarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonBuscarMouseExited(evt);
            }
        });
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCodigo)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabelStock)
                            .addGap(104, 104, 104)
                            .addComponent(jSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabelPrecio)
                                .addComponent(jLabelCategoria)
                                .addComponent(jLabelDescripcion))
                            .addGap(31, 31, 31)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBoxCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelCargarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jLabelCargarProducto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCodigo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDescripcion)
                    .addComponent(jTextFieldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrecio)
                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStock)
                    .addComponent(jSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCategoria)
                    .addComponent(jComboBoxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonNuevoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonNuevoMouseExited(evt);
            }
        });
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setEnabled(false);
        jButtonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonGuardarMouseExited(evt);
            }
        });
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.setEnabled(false);
        jButtonActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonActualizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonActualizarMouseExited(evt);
            }
        });
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButtonEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButtonEliminarMouseExited(evt);
            }
        });
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTextPaneDescripcion);

        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jButtonNuevo)
                                .addGap(56, 56, 56)
                                .addComponent(jButtonGuardar)
                                .addGap(69, 69, 69)
                                .addComponent(jButtonActualizar)
                                .addGap(42, 42, 42)
                                .addComponent(jButtonEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(164, 164, 164)
                                .addComponent(jLabelGestionDeProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 28, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelGestionDeProductos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNuevo)
                    .addComponent(jButtonGuardar)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonEliminar))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    //Habilito los elementos
    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        
        //Desbloqueo campos y botones
        jButtonActualizar.setEnabled(true);
        jButtonEliminar.setEnabled(true);
        jButtonGuardar.setEnabled(true);
        
        jTextFieldCodigo.setEnabled(true);
        jTextFieldDescripcion.setEnabled(true);
        jTextFieldPrecio.setEnabled(true);
        jComboBoxCategoria.setEnabled(true);
        jSpinnerStock.setEnabled(true);
        
        //limpio los campos
        limpiarTodo();
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    //Actualizo un producto existente
    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        
        //si el campo "Codigo" no existe, salir (para eliminar algo, primero debe existir)
        if (jTextFieldCodigo.getText().isEmpty()) {                 
            JOptionPane.showMessageDialog(this, "Debe ingresar un Código.");
            return;
        }  
        
        //Guardo el codigo del producto que quiero eliminar
        int a = Integer.parseInt(jTextFieldCodigo.getText());
        int b;
        
        //Recorro mi Treeset
        for (Producto listaProducto : listaProductos) {
            b = listaProducto.getCodigo();
            //Si encuento un objeto cuyo código sea igual al que quiero eliminar
            if (a == b) { 
                 JOptionPane.showMessageDialog(this, "Se actualizó el siguiente prodcuto: " + listaProducto.getDescripcion());
                //lo borro y muestro nuevamente la tabla
                listaProductos.remove(listaProducto);
                //agrego con los nuevos datos
                agregarProducto2();
                //muestro mi nunevo treeset
                limpioYRecorro();
                limpiarTodo();
                return;
            } 
        }
        //si no existe ese código, no puedo actualizarlo
        JOptionPane.showMessageDialog(this, "No existe un producto con ese código.");   
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    //elimino un producto existente    
    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:    
                
        //si el campo "Codigo" no existe, salir (para eliminar algo, primero debe existir)
        if (jTextFieldCodigo.getText().isEmpty()) {                 
            JOptionPane.showMessageDialog(this, "Debe ingresar un Código.");
            return;
        }  
        
        //Guardo el codigo del producto que quiero eliminar
        int a = Integer.parseInt(jTextFieldCodigo.getText());
        int b;
                
        //Recorro mi Treeset
        for (Producto listaProducto : listaProductos) {
            b = listaProducto.getCodigo();
            //Si encuento un objeto cuyo código sea igual al que quiero eliminar
            if (a == b) { 
                JOptionPane.showMessageDialog(this, "Se eliminó el siguiente prodcuto: " + listaProducto.getDescripcion());
                //lo borro y muestro nuevamente la tabla
                listaProductos.remove(listaProducto);
                //muestro mi nunevo treeset
                limpioYRecorro();
                limpiarTodo();
                return;
            } 
        }
        //si no existe ese código, no puedo actualizarlo
        JOptionPane.showMessageDialog(this, "No existe un producto con ese código.");  
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonNuevoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNuevoMouseEntered
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("Limpia la ventana para ingresar un nuevo producto");
    }//GEN-LAST:event_jButtonNuevoMouseEntered

    private void jButtonNuevoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNuevoMouseExited
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("");
    }//GEN-LAST:event_jButtonNuevoMouseExited

    private void jButtonEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEliminarMouseEntered
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("Elimina toda la información del producto seleccionado");
    }//GEN-LAST:event_jButtonEliminarMouseEntered

    private void jButtonEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEliminarMouseExited
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("");
    }//GEN-LAST:event_jButtonEliminarMouseExited

    //para añadir productos nueuvos
    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        // TODO add your handling code here:
        
        //si el campo "Codigo" no existe, salir (para eliminar algo, primero debe existir)
        if (jTextFieldCodigo.getText().isEmpty()) {                 
            JOptionPane.showMessageDialog(this, "Debe ingresar un Código.");
            return;
        } 
        
        //compruebo que el código no esté utilizado
        for (Producto listaProducto : listaProductos) {
            int a = Integer.parseInt(jTextFieldCodigo.getText());
            int b = listaProducto.getCodigo();
            if (a == b) { 
            JOptionPane.showMessageDialog(this, "No puede sobreescribir productos con el mismo código. Debe actualizarlo");
            return;
            } 
        }
        //si no está utlizado, lo agrego al treeset y a la tabla
        agregarProducto2(); //ver método debaj)
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBuscarMouseEntered
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("Busca por código");

    }//GEN-LAST:event_jButtonBuscarMouseEntered

    private void jButtonBuscarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBuscarMouseExited
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("");

    }//GEN-LAST:event_jButtonBuscarMouseExited

    private void jButtonGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGuardarMouseEntered
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("Guarda un nuevo producto");

    }//GEN-LAST:event_jButtonGuardarMouseEntered

    private void jButtonGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGuardarMouseExited
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("");
    }//GEN-LAST:event_jButtonGuardarMouseExited

    private void jButtonActualizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonActualizarMouseEntered
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("Actualiza un producto existente");
    }//GEN-LAST:event_jButtonActualizarMouseEntered

    private void jButtonActualizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonActualizarMouseExited
        // TODO add your handling code here:
        jTextPaneDescripcion.setText("");
    }//GEN-LAST:event_jButtonActualizarMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JComboBox<Categoria> jComboBoxCategoria;
    private javax.swing.JLabel jLabelCargarProducto;
    private javax.swing.JLabel jLabelCategoria;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelDescripcion;
    private javax.swing.JLabel jLabelGestionDeProductos;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JLabel jLabelStock;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerStock;
    private javax.swing.JTable jTableProductos;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldDescripcion;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextPane jTextPaneDescripcion;
    // End of variables declaration//GEN-END:variables

    private void limpiarTodo(){
        jTextFieldCodigo.setText("");
        jTextFieldDescripcion.setText("");
        jTextFieldPrecio.setText("");
        jSpinnerStock.setValue(0);
    }
    
    private void cargarProductos(Producto producto){        
        listaProductos.add(producto);        
    }
    
    private void iniciarCombo() {
    //lleno el JComboBox con los items de mi clase "Categoria"
        for (Categoria item : Categoria.values()) {
            jComboBoxCategoria.addItem(item);
        }
    }
    
    //limpio los elementos de la tabla y la genero nuevamente
    private void limpioYRecorro(){
        //limpio la tabla
        modelo.setRowCount(0);

        //recorro mi lista y agrego a la tabla cada uno de los elementos
        for (Producto listaProducto : listaProductos) {
            int a = listaProducto.getCodigo();
            String b = listaProducto.getDescripcion();
            double c = listaProducto.getPrecio();
            int d = listaProducto.getStock();
            Categoria e = listaProducto.getRubro();

            agregarProducto(a, b, c, d, e);
        }
    }
    
    //perzonalizo la tabla
    private void encabezados(){
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        modelo.addColumn("Categoria");
        jTableProductos.setModel(modelo);
    }
    
      
    //agrego un objeto como nueva fila a la tabla
    public void agregarProducto(int codigo, String descripcion, double precio, int stock, Categoria categoria){        
        modelo.addRow(new Object[]{codigo, descripcion,precio, stock, categoria});
    }    
    
    public void agregarProducto2(){
        try {   
            //si el campo "Codigo" está vacío, salir
            if (jTextFieldCodigo.getText().isEmpty()) {                 
                JOptionPane.showMessageDialog(this, "Debe ingresar un Código.");
                return;
            }
            //si el campo "Descripcion" está vacío, salir
            if (jTextFieldDescripcion.getText().isEmpty()) {                 
                JOptionPane.showMessageDialog(this, "Debe ingresar un producto.");
                return;
            } 
            //si el campo "Precio" está vacío, salir 
            if (jTextFieldPrecio.getText().isEmpty()) {//si el campo "Precio" está vacío, salir 
            JOptionPane.showMessageDialog(this, "Debe ingresar un precio."); 
            return;
            }

            int cod = Integer.parseInt(jTextFieldCodigo.getText());
            String descrip = jTextFieldDescripcion.getText();
            double precio = Double.parseDouble(jTextFieldPrecio.getText());
            int stock =(int) jSpinnerStock.getValue();
            Categoria cat = (Categoria) jComboBoxCategoria.getSelectedItem();

            Producto producto = new Producto(cod, descrip, precio, stock,cat);

            //agrego las variables a la tabla (ver método)
            cargarProductos(producto);
            //muestro la nueva tabla
            limpioYRecorro();

            JOptionPane.showMessageDialog(this, "¡Se añadió un producto!"); 

            //limpio los campos
            limpiarTodo();
                
        //excepción en caso de ingresar un precio inválido        
        } catch (HeadlessException | NumberFormatException e) { 
            JOptionPane.showMessageDialog(this, "Ingrese un formato de código/precio válido.");
        }
    }
}